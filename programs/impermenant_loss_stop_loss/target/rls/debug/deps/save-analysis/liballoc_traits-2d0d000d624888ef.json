{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1","program":"/Users/nolanjacobsonpersonal/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","alloc_traits","--edition=2018","/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=2d0d000d624888ef","-C","extra-filename=-2d0d000d624888ef","--out-dir","/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps","-L","dependency=/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/nolanjacobsonpersonal/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps/liballoc_traits-2d0d000d624888ef.rmeta"},"prelude":{"crate_id":{"name":"alloc_traits","disambiguator":[15874203894498791052,0]},"crate_root":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src","external_crates":[{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}}],"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":0,"byte_end":1233,"line_start":1,"line_end":29,"column_start":1,"column_end":33}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1097,"byte_end":1103,"line_start":26,"line_end":26,"column_start":25,"column_end":31},"alias_span":null,"name":"Layout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1105,"byte_end":1118,"line_start":26,"line_end":26,"column_start":33,"column_end":46},"alias_span":null,"name":"NonZeroLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":154},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1144,"byte_end":1153,"line_start":27,"line_end":27,"column_start":24,"column_end":33},"alias_span":null,"name":"AllocTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":186},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1155,"byte_end":1165,"line_start":27,"line_end":27,"column_start":35,"column_end":45},"alias_span":null,"name":"Allocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1167,"byte_end":1177,"line_start":27,"line_end":27,"column_start":47,"column_end":57},"alias_span":null,"name":"LocalAlloc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1223,"byte_end":1232,"line_start":29,"line_end":29,"column_start":23,"column_end":32},"alias_span":null,"name":"Invariant","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":0,"byte_end":1233,"line_start":1,"line_end":29,"column_start":1,"column_end":33},"name":"","qualname":"::","value":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":38},{"krate":0,"index":64},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":94},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":101},{"krate":0,"index":104},{"krate":0,"index":107}],"decl_id":null,"docs":" Traits to replace or supplement the alloc module in `no_std`.\n \n Defines traits, similar to `alloc::GlobalAlloc`, that can be implemented to defined different\n kinds of allocators. Unlike the standard library one they do not presume global uniqueness and\n static lifetime of the memory resource provider. In return, the allocators are not required to\n implement the `Sync` bound and can easily be built without operating system support to be\n usable.\n \n There are additional independent crates with additional abstractions on-top:\n * [`static-alloc`]: A simple allocator drawing from a memory region statically\n   embedded within the compiled binary.\n * [`without-alloc`]: A set of data structures (`Box`, `Vec`, `Rc`, ...) that can\n   be allocated from the implementors of the traits defined here.\n \n [`static-alloc`]: https://crates.io/crates/static-alloc\n [`without-alloc`]: https://crates.io/crates/without-alloc\n","sig":null,"attributes":[{"value":"/ Traits to replace or supplement the alloc module in `no_std`.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":0,"byte_end":65,"line_start":1,"line_end":1,"column_start":1,"column_end":66}},{"value":"/ ","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":66,"byte_end":70,"line_start":2,"line_end":2,"column_start":1,"column_end":5}},{"value":"/ Defines traits, similar to `alloc::GlobalAlloc`, that can be implemented to defined different","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":71,"byte_end":168,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ kinds of allocators. Unlike the standard library one they do not presume global uniqueness and","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":169,"byte_end":267,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ static lifetime of the memory resource provider. In return, the allocators are not required to","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":268,"byte_end":366,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ implement the `Sync` bound and can easily be built without operating system support to be","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":367,"byte_end":460,"line_start":6,"line_end":6,"column_start":1,"column_end":94}},{"value":"/ usable.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":461,"byte_end":472,"line_start":7,"line_end":7,"column_start":1,"column_end":12}},{"value":"/ ","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":473,"byte_end":477,"line_start":8,"line_end":8,"column_start":1,"column_end":5}},{"value":"/ There are additional independent crates with additional abstractions on-top:","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":478,"byte_end":558,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ * [`static-alloc`]: A simple allocator drawing from a memory region statically","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":559,"byte_end":641,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/   embedded within the compiled binary.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":642,"byte_end":684,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/ * [`without-alloc`]: A set of data structures (`Box`, `Vec`, `Rc`, ...) that can","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":685,"byte_end":769,"line_start":12,"line_end":12,"column_start":1,"column_end":85}},{"value":"/   be allocated from the implementors of the traits defined here.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":770,"byte_end":838,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ ","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":839,"byte_end":843,"line_start":14,"line_end":14,"column_start":1,"column_end":5}},{"value":"/ [`static-alloc`]: https://crates.io/crates/static-alloc","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":844,"byte_end":903,"line_start":15,"line_end":15,"column_start":1,"column_end":60}},{"value":"/ [`without-alloc`]: https://crates.io/crates/without-alloc","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":904,"byte_end":965,"line_start":16,"line_end":16,"column_start":1,"column_end":62}},{"value":"no_std","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1000,"byte_end":1010,"line_start":19,"line_end":19,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1011,"byte_end":1033,"line_start":20,"line_end":20,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":110},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1518,"byte_end":1524,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Layout","qualname":"::layout::Layout","value":"","parent":null,"children":[],"decl_id":null,"docs":" Layout of an allocated block of memory.","sig":null,"attributes":[{"value":"/ Layout of an allocated block of memory.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1293,"byte_end":1336,"line_start":4,"line_end":4,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1337,"byte_end":1340,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Wraps the `Layout` structure from core but extends it in a few ways that would otherwise depend","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1341,"byte_end":1440,"line_start":6,"line_end":6,"column_start":1,"column_end":100}},{"value":"/ on nightly compiler.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1441,"byte_end":1465,"line_start":7,"line_end":7,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1641,"byte_end":1654,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"NonZeroLayout","qualname":"::layout::NonZeroLayout","value":"","parent":null,"children":[],"decl_id":null,"docs":" A non-empty layout which can be allocated.\n","sig":null,"attributes":[{"value":"/ A non-empty layout which can be allocated.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1542,"byte_end":1588,"line_start":11,"line_end":11,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1744,"byte_end":1760,"line_start":16,"line_end":16,"column_start":12,"column_end":28},"name":"EmptyLayoutError","qualname":"::layout::EmptyLayoutError","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1826,"byte_end":1829,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Layout>::new","value":"pub fn new<T>() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the layout for a type.\n","sig":null,"attributes":[{"value":"/ Create the layout for a type.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1781,"byte_end":1814,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1944,"byte_end":1948,"line_start":25,"line_end":25,"column_start":12,"column_end":16},"name":"size","qualname":"<Layout>::size","value":"pub fn size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the layout.\n","sig":null,"attributes":[{"value":"/ Return the size of the layout.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1898,"byte_end":1932,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2051,"byte_end":2056,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"align","qualname":"<Layout>::align","value":"pub fn align(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the alignment of the layout.\n","sig":null,"attributes":[{"value":"/ Return the alignment of the layout.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2000,"byte_end":2039,"line_start":29,"line_end":29,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2304,"byte_end":2307,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<NonZeroLayout>::new","value":"pub fn new<T>() -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create the layout for a type.","sig":null,"attributes":[{"value":"/ Create the layout for a type.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2132,"byte_end":2165,"line_start":36,"line_end":36,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2170,"byte_end":2173,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This succeeds exactly if the type is not a zero-sized type. Otherwise this constructor","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2178,"byte_end":2268,"line_start":38,"line_end":38,"column_start":5,"column_end":95}},{"value":"/ returns `None`.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2273,"byte_end":2292,"line_start":39,"line_end":39,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2464,"byte_end":2475,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"from_layout","qualname":"<NonZeroLayout>::from_layout","value":"pub fn from_layout(Layout) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a non-empty layout if the given layout is not empty.\n","sig":null,"attributes":[{"value":"/ Creates a non-empty layout if the given layout is not empty.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2388,"byte_end":2452,"line_start":44,"line_end":44,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2683,"byte_end":2687,"line_start":54,"line_end":54,"column_start":12,"column_end":16},"name":"size","qualname":"<NonZeroLayout>::size","value":"pub fn size(&Self) -> NonZeroUsize","parent":null,"children":[],"decl_id":null,"docs":" Return the size of the layout.\n","sig":null,"attributes":[{"value":"/ Return the size of the layout.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2637,"byte_end":2671,"line_start":53,"line_end":53,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2825,"byte_end":2830,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"align","qualname":"<NonZeroLayout>::align","value":"pub fn align(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the alignment of the layout.\n","sig":null,"attributes":[{"value":"/ Return the alignment of the layout.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2774,"byte_end":2813,"line_start":58,"line_end":58,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":154},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":3988,"byte_end":3997,"line_start":10,"line_end":10,"column_start":12,"column_end":21},"name":"AllocTime","qualname":"::local::AllocTime","value":"AllocTime {  }","parent":null,"children":[{"krate":0,"index":156}],"decl_id":null,"docs":" A marker struct denoting a lifetime that is not simply coercible to another.\n","sig":null,"attributes":[{"value":"/ A marker struct denoting a lifetime that is not simply coercible to another.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":3826,"byte_end":3906,"line_start":8,"line_end":8,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4196,"byte_end":4205,"line_start":16,"line_end":16,"column_start":10,"column_end":19},"name":"Invariant","qualname":"::local::Invariant","value":"AllocTime","parent":null,"children":[],"decl_id":null,"docs":" A marker struct denoting a lifetime that is not simply coercible to another.\n","sig":null,"attributes":[{"value":"/ A marker struct denoting a lifetime that is not simply coercible to another.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4051,"byte_end":4131,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"deprecated = \"Use the new name 'AllocTime' instead\"","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4132,"byte_end":4186,"line_start":15,"line_end":15,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":186},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4452,"byte_end":4462,"line_start":23,"line_end":23,"column_start":12,"column_end":22},"name":"Allocation","qualname":"::local::Allocation","value":"Allocation { ptr, layout, lifetime }","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"decl_id":null,"docs":" An allocation valid for a particular lifetime.","sig":null,"attributes":[{"value":"/ An allocation valid for a particular lifetime.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4230,"byte_end":4280,"line_start":18,"line_end":18,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4281,"byte_end":4284,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ It is advisable to try and deallocate it before the end of the lifetime instead of leaking the","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4285,"byte_end":4383,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ allocation.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4384,"byte_end":4399,"line_start":21,"line_end":21,"column_start":1,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":188},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4553,"byte_end":4556,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"name":"ptr","qualname":"::local::Allocation::ptr","value":"core::ptr::NonNull<u8>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" A pointer to the allocated and potentially uninitialized bytes.\n","sig":null,"attributes":[{"value":"/ A pointer to the allocated and potentially uninitialized bytes.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4477,"byte_end":4544,"line_start":24,"line_end":24,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":189},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4609,"byte_end":4615,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"layout","qualname":"::local::Allocation::layout","value":"layout::NonZeroLayout","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The allocated layout.\n","sig":null,"attributes":[{"value":"/ The allocated layout.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4575,"byte_end":4600,"line_start":26,"line_end":26,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":190},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4680,"byte_end":4688,"line_start":29,"line_end":29,"column_start":9,"column_end":17},"name":"lifetime","qualname":"::local::Allocation::lifetime","value":"local::AllocTime<'alloc>","parent":{"krate":0,"index":186},"children":[],"decl_id":null,"docs":" The lifetime of the allocation.\n","sig":null,"attributes":[{"value":"/ The lifetime of the allocation.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4636,"byte_end":4671,"line_start":28,"line_end":28,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4978,"byte_end":4988,"line_start":36,"line_end":36,"column_start":18,"column_end":28},"name":"LocalAlloc","qualname":"::local::LocalAlloc","value":"LocalAlloc<'alloc>","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" An allocator providing memory regions valid for a particular lifetime.","sig":null,"attributes":[{"value":"/ An allocator providing memory regions valid for a particular lifetime.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4712,"byte_end":4786,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4787,"byte_end":4790,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ It is useful to compare this trait to `std::alloc::GlobalAlloc`. Similar to the trait it is","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4791,"byte_end":4886,"line_start":34,"line_end":34,"column_start":1,"column_end":96}},{"value":"/ required that the implementors adhere to the contract of the methods.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":4887,"byte_end":4960,"line_start":35,"line_end":35,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5201,"byte_end":5206,"line_start":41,"line_end":41,"column_start":8,"column_end":13},"name":"alloc","qualname":"::local::LocalAlloc::alloc","value":"pub fn alloc(&'alloc Self, NonZeroLayout) -> Option<Allocation>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Allocate one block of memory.","sig":null,"attributes":[{"value":"/ Allocate one block of memory.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5003,"byte_end":5036,"line_start":37,"line_end":37,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5041,"byte_end":5044,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ The callee guarantees that a successful return contains a pointer that is valid for **at","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5049,"byte_end":5141,"line_start":39,"line_end":39,"column_start":5,"column_end":97}},{"value":"/ least** the layout requested by the caller.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5146,"byte_end":5193,"line_start":40,"line_end":40,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5519,"byte_end":5526,"line_start":48,"line_end":48,"column_start":15,"column_end":22},"name":"dealloc","qualname":"::local::LocalAlloc::dealloc","value":"pub unsafe fn dealloc(&'alloc Self, Allocation)","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Deallocate a block previously allocated.\n # Safety\n The caller must ensure that:\n * `alloc` has been previously returned from a call to `alloc`.\n * There are no more pointer to the allocation.\n","sig":null,"attributes":[{"value":"/ Deallocate a block previously allocated.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5280,"byte_end":5324,"line_start":43,"line_end":43,"column_start":5,"column_end":49}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5329,"byte_end":5341,"line_start":44,"line_end":44,"column_start":5,"column_end":17}},{"value":"/ The caller must ensure that:","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5346,"byte_end":5378,"line_start":45,"line_end":45,"column_start":5,"column_end":37}},{"value":"/ * `alloc` has been previously returned from a call to `alloc`.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5383,"byte_end":5449,"line_start":46,"line_end":46,"column_start":5,"column_end":71}},{"value":"/ * There are no more pointer to the allocation.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5454,"byte_end":5504,"line_start":47,"line_end":47,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5929,"byte_end":5941,"line_start":55,"line_end":55,"column_start":8,"column_end":20},"name":"alloc_zeroed","qualname":"::local::LocalAlloc::alloc_zeroed","value":"pub fn alloc_zeroed(&'alloc Self, NonZeroLayout) -> Option<Allocation>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Allocate a block of memory initialized with zeros.","sig":null,"attributes":[{"value":"/ Allocate a block of memory initialized with zeros.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5574,"byte_end":5628,"line_start":50,"line_end":50,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5633,"byte_end":5636,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The callee guarantees that a successful return contains a pointer that is valid for **at","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5641,"byte_end":5733,"line_start":52,"line_end":52,"column_start":5,"column_end":97}},{"value":"/ least** the layout requested by the caller and the contiguous region of bytes, starting at","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5738,"byte_end":5832,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ the pointer and with the size of the returned layout, is initialized and zeroed.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":5837,"byte_end":5921,"line_start":54,"line_end":54,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6774,"byte_end":6781,"line_start":71,"line_end":71,"column_start":15,"column_end":22},"name":"realloc","qualname":"::local::LocalAlloc::realloc","value":"pub unsafe fn realloc(&'alloc Self, Allocation, NonZeroLayout)\n-> Option<Allocation>","parent":{"krate":0,"index":56},"children":[],"decl_id":null,"docs":" Change the layout of a block previously allocated.","sig":null,"attributes":[{"value":"/ Change the layout of a block previously allocated.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6087,"byte_end":6141,"line_start":61,"line_end":61,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6146,"byte_end":6149,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ The callee guarantees that a successful return contains a pointer that is valid for **at","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6154,"byte_end":6246,"line_start":63,"line_end":63,"column_start":5,"column_end":97}},{"value":"/ least** the layout requested by the caller and the contiguous region of bytes, starting at","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6251,"byte_end":6345,"line_start":64,"line_end":64,"column_start":5,"column_end":99}},{"value":"/ the pointer and with the size of the returned layout, is initialized with the prefix of the","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6350,"byte_end":6445,"line_start":65,"line_end":65,"column_start":5,"column_end":100}},{"value":"/ previous allocation that is still valid.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6450,"byte_end":6494,"line_start":66,"line_end":66,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6499,"byte_end":6502,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that it is *NOT* safe to elide the methods call for changing the alignment of the","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6507,"byte_end":6597,"line_start":68,"line_end":68,"column_start":5,"column_end":95}},{"value":"/ layout to a less strict one, or to an incidentally fulfilled stricter version. The","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6602,"byte_end":6688,"line_start":69,"line_end":69,"column_start":5,"column_end":91}},{"value":"/ allocator might make use of the alignment during deallocation.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6693,"byte_end":6759,"line_start":70,"line_end":70,"column_start":5,"column_end":71}}]},{"kind":"Mod","id":{"krate":0,"index":64},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" Various utilities such as default implementations.\n","sig":null,"attributes":[{"value":"/ Various utilities such as default implementations.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7084,"byte_end":7138,"line_start":1,"line_end":1,"column_start":1,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":65},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7357,"byte_end":7365,"line_start":7,"line_end":7,"column_start":9,"column_end":17},"name":"defaults","qualname":"::util::defaults","value":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","parent":null,"children":[{"krate":0,"index":66}],"decl_id":null,"docs":" Implementations of default items of traits.","sig":null,"attributes":[{"value":"/ Implementations of default items of traits.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7140,"byte_end":7187,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7188,"byte_end":7191,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ It is expected that these might be used as a fallback 'super' call of sorts on trait","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7192,"byte_end":7280,"line_start":5,"line_end":5,"column_start":1,"column_end":89}},{"value":"/ implementors to opportunistically do some form of optimization.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7281,"byte_end":7348,"line_start":6,"line_end":6,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7873,"byte_end":7878,"line_start":16,"line_end":16,"column_start":13,"column_end":18},"name":"local","qualname":"::util::defaults::local","value":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87}],"decl_id":null,"docs":" Default implementations for the `LocalAlloc` trait.","sig":null,"attributes":[{"value":"/ Default implementations for the `LocalAlloc` trait.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7372,"byte_end":7427,"line_start":8,"line_end":8,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7432,"byte_end":7435,"line_start":9,"line_end":9,"column_start":5,"column_end":8}},{"value":"/ See [`LocalAlloc`] for more information. The methods called by the functions in this module","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7440,"byte_end":7535,"line_start":10,"line_end":10,"column_start":5,"column_end":100}},{"value":"/ are documented and will not change between non-breaking releases, if at all. Rather new","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7540,"byte_end":7631,"line_start":11,"line_end":11,"column_start":5,"column_end":96}},{"value":"/ variants may be added that call additional methods that might be more efficient. This","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7636,"byte_end":7725,"line_start":12,"line_end":12,"column_start":5,"column_end":94}},{"value":"/ avoids accidentally creating a dependency loop in implementors.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7730,"byte_end":7797,"line_start":13,"line_end":13,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7802,"byte_end":7805,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ [`LocalAlloc`]: ../../../trait.LocalAlloc.html","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":7810,"byte_end":7860,"line_start":15,"line_end":15,"column_start":5,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":84},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8398,"byte_end":8410,"line_start":27,"line_end":27,"column_start":16,"column_end":28},"name":"alloc_zeroed","qualname":"::util::defaults::local::alloc_zeroed","value":"pub fn alloc_zeroed<'alloc, Alloc: ?Sized>(&'alloc Alloc, NonZeroLayout)\n-> Option<Allocation> where Alloc: LocalAlloc","parent":null,"children":[],"decl_id":null,"docs":" Allocate a block of memory initialized with zeros.","sig":null,"attributes":[{"value":"/ Allocate a block of memory initialized with zeros.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8035,"byte_end":8089,"line_start":21,"line_end":21,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8098,"byte_end":8101,"line_start":22,"line_end":22,"column_start":9,"column_end":12}},{"value":"/ See [`LocalAlloc::alloc_zeroed`] for more information. This is a default implementation","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8110,"byte_end":8201,"line_start":23,"line_end":23,"column_start":9,"column_end":100}},{"value":"/ that might be less efficient than a dedicated one. It only uses the `alloc` method.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8210,"byte_end":8297,"line_start":24,"line_end":24,"column_start":9,"column_end":96}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8306,"byte_end":8309,"line_start":25,"line_end":25,"column_start":9,"column_end":12}},{"value":"/ [`LocalAlloc::alloc_zeroed`]: ../../../trait.LocalAlloc.html","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8318,"byte_end":8382,"line_start":26,"line_end":26,"column_start":9,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":87},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9278,"byte_end":9285,"line_start":51,"line_end":51,"column_start":23,"column_end":30},"name":"realloc","qualname":"::util::defaults::local::realloc","value":"pub unsafe fn realloc<'alloc,\n                      Alloc: ?Sized>(&'alloc Alloc, Allocation, NonZeroLayout)\n-> Option<Allocation> where Alloc: LocalAlloc","parent":null,"children":[],"decl_id":null,"docs":" Change the layout of a block previously allocated.","sig":null,"attributes":[{"value":"/ Change the layout of a block previously allocated.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8831,"byte_end":8885,"line_start":41,"line_end":41,"column_start":9,"column_end":63}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8894,"byte_end":8897,"line_start":42,"line_end":42,"column_start":9,"column_end":12}},{"value":"/ See [`LocalAlloc::realloc`] for more information. This is a default implementation that","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":8906,"byte_end":8997,"line_start":43,"line_end":43,"column_start":9,"column_end":100}},{"value":"/ might be less efficient than a dedicated one. It only uses the `alloc` and `dealloc`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9006,"byte_end":9094,"line_start":44,"line_end":44,"column_start":9,"column_end":97}},{"value":"/ methods.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9103,"byte_end":9115,"line_start":45,"line_end":45,"column_start":9,"column_end":21}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9124,"byte_end":9127,"line_start":46,"line_end":46,"column_start":9,"column_end":12}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9136,"byte_end":9148,"line_start":47,"line_end":47,"column_start":9,"column_end":21}},{"value":"/ See the trait.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9157,"byte_end":9175,"line_start":48,"line_end":48,"column_start":9,"column_end":27}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9184,"byte_end":9187,"line_start":49,"line_end":49,"column_start":9,"column_end":12}},{"value":"/ [`LocalAlloc::realloc`]: ../../../trait.LocalAlloc.html","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/util.rs","byte_start":9196,"byte_end":9255,"line_start":50,"line_end":50,"column_start":9,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1768,"byte_end":1774,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2112,"byte_end":2125,"line_start":35,"line_end":35,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2910,"byte_end":2916,"line_start":64,"line_end":64,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3028,"byte_end":3034,"line_start":70,"line_end":70,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3153,"byte_end":3159,"line_start":76,"line_end":76,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":31}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3275,"byte_end":3288,"line_start":82,"line_end":82,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":33},{"krate":0,"index":34}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3511,"byte_end":3524,"line_start":90,"line_end":90,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6973,"byte_end":6982,"line_start":78,"line_end":78,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/lib.rs","byte_start":1066,"byte_end":1070,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":64}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":1768,"byte_end":1774,"line_start":18,"line_end":18,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":110},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2112,"byte_end":2125,"line_start":35,"line_end":35,"column_start":6,"column_end":19},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":2910,"byte_end":2916,"line_start":64,"line_end":64,"column_start":30,"column_end":36},"kind":{"Impl":{"id":2}},"from":{"krate":1,"index":43051},"to":{"krate":1,"index":2786}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3028,"byte_end":3034,"line_start":70,"line_end":70,"column_start":37,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":1,"index":43051},"to":{"krate":1,"index":2786}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3153,"byte_end":3159,"line_start":76,"line_end":76,"column_start":30,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":110},"to":{"krate":1,"index":2786}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3275,"byte_end":3288,"line_start":82,"line_end":82,"column_start":35,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":122},"to":{"krate":1,"index":2793}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/layout.rs","byte_start":3511,"byte_end":3524,"line_start":90,"line_end":90,"column_start":42,"column_end":55},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":122},"to":{"krate":1,"index":2793}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/alloc-traits-0.1.1/src/local.rs","byte_start":6973,"byte_end":6982,"line_start":78,"line_end":78,"column_start":21,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":154},"to":{"krate":1,"index":8962}}]}