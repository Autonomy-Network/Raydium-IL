{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4","program":"/Users/nolanjacobsonpersonal/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","field_offset","/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=552cf2bd25466465","-C","extra-filename=-552cf2bd25466465","--out-dir","/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps","-L","dependency=/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps","--extern","memoffset=/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps/libmemoffset-fb437e9aedfc73f2.rmeta","--cap-lints","allow","--cfg","fieldoffset_maybe_uninit","--cfg","fieldoffset_has_alloc","--error-format=json","--sysroot","/Users/nolanjacobsonpersonal/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/nolanjacobsonpersonal/solana-hack-oasis-finance/anchor/programs/new-vault/target/rls/debug/deps/libfield_offset-552cf2bd25466465.rmeta"},"prelude":{"crate_id":{"name":"field_offset","disambiguator":[10724860896121911130,0]},"crate_root":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src","external_crates":[{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[10550174156715778454,0]}},{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8770346864682343241,0]}},{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[8196830942918118636,0]}},{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","num":4,"id":{"name":"memoffset","disambiguator":[8261975185547868517,0]}}],"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":0,"byte_end":17402,"line_start":1,"line_end":528,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":0,"byte_end":17402,"line_start":1,"line_end":528,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":27},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":44},{"krate":0,"index":63},{"krate":0,"index":73},{"krate":0,"index":77},{"krate":0,"index":83},{"krate":0,"index":89},{"krate":0,"index":95},{"krate":0,"index":101},{"krate":0,"index":106},{"krate":0,"index":110}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":244,"byte_end":281,"line_start":6,"line_end":6,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":748,"byte_end":759,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"FieldOffset","qualname":"::FieldOffset","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a pointer to a field of type `U` within the type `T`","sig":null,"attributes":[{"value":"/ Represents a pointer to a field of type `U` within the type `T`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":538,"byte_end":605,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":606,"byte_end":609,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `PinFlag` parameter can be set to `AllowPin` to enable the projection","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":610,"byte_end":687,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ from Pin<&T> to Pin<&U>","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":688,"byte_end":715,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"repr(transparent)","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":716,"byte_end":736,"line_start":24,"line_end":24,"column_start":1,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":31},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2344,"byte_end":2352,"line_start":65,"line_end":65,"column_start":10,"column_end":18},"name":"AllowPin","qualname":"::AllowPin","value":"pub enum AllowPin { }","parent":null,"children":[],"decl_id":null,"docs":" Type that can be used in the `PinFlag` parameter of `FieldOffset` to specify that\n this projection is valid on Pin types.\n See documentation of `FieldOffset::new_from_offset_pinned`\n","sig":null,"attributes":[{"value":"/ Type that can be used in the `PinFlag` parameter of `FieldOffset` to specify that","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2143,"byte_end":2228,"line_start":62,"line_end":62,"column_start":1,"column_end":86}},{"value":"/ this projection is valid on Pin types.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2229,"byte_end":2271,"line_start":63,"line_end":63,"column_start":1,"column_end":43}},{"value":"/ See documentation of `FieldOffset::new_from_offset_pinned`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2272,"byte_end":2334,"line_start":64,"line_end":64,"column_start":1,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":32},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2499,"byte_end":2508,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"name":"NotPinned","qualname":"::NotPinned","value":"pub enum NotPinned { }","parent":null,"children":[],"decl_id":null,"docs":" Type that can be used in the `PinFlag` parameter of `FieldOffset` to specify that\n this projection is not valid on Pin types.\n","sig":null,"attributes":[{"value":"/ Type that can be used in the `PinFlag` parameter of `FieldOffset` to specify that","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2357,"byte_end":2442,"line_start":67,"line_end":67,"column_start":1,"column_end":86}},{"value":"/ this projection is not valid on Pin types.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2443,"byte_end":2489,"line_start":68,"line_end":68,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3607,"byte_end":3610,"line_start":99,"line_end":99,"column_start":19,"column_end":22},"name":"new","qualname":"<FieldOffset<T, U, NotPinned>>::new","value":"pub unsafe fn new<F: for<'a> FnOnce(*const T) -> *const U>(F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a field offset via a lambda which returns a reference\n to the field in question.","sig":null,"attributes":[{"value":"/ Construct a field offset via a lambda which returns a reference","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3020,"byte_end":3087,"line_start":87,"line_end":87,"column_start":5,"column_end":72}},{"value":"/ to the field in question.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3092,"byte_end":3121,"line_start":88,"line_end":88,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3126,"byte_end":3129,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3134,"byte_end":3146,"line_start":90,"line_end":90,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3151,"byte_end":3154,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ The lambda *must not* dereference the provided pointer or access the","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3159,"byte_end":3231,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ inner value in any way as it may point to uninitialized memory.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3236,"byte_end":3303,"line_start":93,"line_end":93,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3308,"byte_end":3311,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ For the returned `FieldOffset` to be safe to use, the returned pointer","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3316,"byte_end":3390,"line_start":95,"line_end":95,"column_start":5,"column_end":79}},{"value":"/ must be valid for *any* instance of `T`. For example, returning a pointer","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3395,"byte_end":3472,"line_start":96,"line_end":96,"column_start":5,"column_end":82}},{"value":"/ to a field from an enum with multiple variants will produce a `FieldOffset`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3477,"byte_end":3556,"line_start":97,"line_end":97,"column_start":5,"column_end":84}},{"value":"/ which is unsafe to use.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3561,"byte_end":3588,"line_start":98,"line_end":98,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4344,"byte_end":4359,"line_start":117,"line_end":117,"column_start":25,"column_end":40},"name":"new_from_offset","qualname":"<FieldOffset<T, U, NotPinned>>::new_from_offset","value":"pub const unsafe fn new_from_offset(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a field offset directly from a byte offset.","sig":null,"attributes":[{"value":"/ Construct a field offset directly from a byte offset.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":3941,"byte_end":3998,"line_start":108,"line_end":108,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4003,"byte_end":4006,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4011,"byte_end":4023,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4028,"byte_end":4031,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ For the returned `FieldOffset` to be safe to use, the field offset","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4036,"byte_end":4106,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/ must be valid for *any* instance of `T`. For example, returning the offset","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4111,"byte_end":4189,"line_start":113,"line_end":113,"column_start":5,"column_end":83}},{"value":"/ to a field from an enum with multiple variants will produce a `FieldOffset`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4194,"byte_end":4273,"line_start":114,"line_end":114,"column_start":5,"column_end":84}},{"value":"/ which is unsafe to use.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4278,"byte_end":4305,"line_start":115,"line_end":115,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":4310,"byte_end":4319,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5314,"byte_end":5323,"line_start":138,"line_end":138,"column_start":12,"column_end":21},"name":"apply_ptr","qualname":"<FieldOffset<T, U, PinFlag>>::apply_ptr","value":"pub fn apply_ptr(Self, *const T) -> *const U","parent":null,"children":[],"decl_id":null,"docs":" Apply the field offset to a native pointer.\n","sig":null,"attributes":[{"value":"/ Apply the field offset to a native pointer.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5241,"byte_end":5288,"line_start":136,"line_end":136,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5293,"byte_end":5302,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5492,"byte_end":5505,"line_start":143,"line_end":143,"column_start":12,"column_end":25},"name":"apply_ptr_mut","qualname":"<FieldOffset<T, U, PinFlag>>::apply_ptr_mut","value":"pub fn apply_ptr_mut(Self, *mut T) -> *mut U","parent":null,"children":[],"decl_id":null,"docs":" Apply the field offset to a native mutable pointer.\n","sig":null,"attributes":[{"value":"/ Apply the field offset to a native mutable pointer.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5411,"byte_end":5466,"line_start":141,"line_end":141,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5471,"byte_end":5480,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5655,"byte_end":5660,"line_start":148,"line_end":148,"column_start":12,"column_end":17},"name":"apply","qualname":"<FieldOffset<T, U, PinFlag>>::apply","value":"pub fn apply<'a>(Self, &'a T) -> &'a U","parent":null,"children":[],"decl_id":null,"docs":" Apply the field offset to a reference.\n","sig":null,"attributes":[{"value":"/ Apply the field offset to a reference.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5587,"byte_end":5629,"line_start":146,"line_end":146,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5634,"byte_end":5643,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5817,"byte_end":5826,"line_start":153,"line_end":153,"column_start":12,"column_end":21},"name":"apply_mut","qualname":"<FieldOffset<T, U, PinFlag>>::apply_mut","value":"pub fn apply_mut<'a>(Self, &'a mut T) -> &'a mut U","parent":null,"children":[],"decl_id":null,"docs":" Apply the field offset to a mutable reference.\n","sig":null,"attributes":[{"value":"/ Apply the field offset to a mutable reference.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5741,"byte_end":5791,"line_start":151,"line_end":151,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5796,"byte_end":5805,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6005,"byte_end":6020,"line_start":158,"line_end":158,"column_start":18,"column_end":33},"name":"get_byte_offset","qualname":"<FieldOffset<T, U, PinFlag>>::get_byte_offset","value":"pub const fn get_byte_offset(Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the raw byte offset for this field offset.\n","sig":null,"attributes":[{"value":"/ Get the raw byte offset for this field offset.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5923,"byte_end":5973,"line_start":156,"line_end":156,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5978,"byte_end":5987,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6673,"byte_end":6684,"line_start":177,"line_end":177,"column_start":19,"column_end":30},"name":"unapply_ptr","qualname":"<FieldOffset<T, U, PinFlag>>::unapply_ptr","value":"pub unsafe fn unapply_ptr(Self, *const U) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Unapply the field offset to a native pointer.","sig":null,"attributes":[{"value":"/ Unapply the field offset to a native pointer.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6117,"byte_end":6166,"line_start":164,"line_end":164,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6171,"byte_end":6174,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6179,"byte_end":6191,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6196,"byte_end":6199,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ *Warning: very unsafe!*","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6204,"byte_end":6231,"line_start":168,"line_end":168,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6236,"byte_end":6239,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This applies a negative offset to a pointer. If the safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6244,"byte_end":6306,"line_start":170,"line_end":170,"column_start":5,"column_end":67}},{"value":"/ implications of this are not already clear to you, then *do","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6311,"byte_end":6374,"line_start":171,"line_end":171,"column_start":5,"column_end":68}},{"value":"/ not* use this method. Also be aware that Rust has stronger","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6379,"byte_end":6441,"line_start":172,"line_end":172,"column_start":5,"column_end":67}},{"value":"/ aliasing rules than other languages, so it may be UB to","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6446,"byte_end":6505,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ dereference the resulting pointer even if it points to a valid","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6510,"byte_end":6576,"line_start":174,"line_end":174,"column_start":5,"column_end":71}},{"value":"/ location, due to the presence of other live references.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6581,"byte_end":6640,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6645,"byte_end":6654,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7336,"byte_end":7351,"line_start":193,"line_end":193,"column_start":19,"column_end":34},"name":"unapply_ptr_mut","qualname":"<FieldOffset<T, U, PinFlag>>::unapply_ptr_mut","value":"pub unsafe fn unapply_ptr_mut(Self, *mut U) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Unapply the field offset to a native mutable pointer.","sig":null,"attributes":[{"value":"/ Unapply the field offset to a native mutable pointer.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6772,"byte_end":6829,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6834,"byte_end":6837,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6842,"byte_end":6854,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6859,"byte_end":6862,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ *Warning: very unsafe!*","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6867,"byte_end":6894,"line_start":184,"line_end":184,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6899,"byte_end":6902,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This applies a negative offset to a pointer. If the safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6907,"byte_end":6969,"line_start":186,"line_end":186,"column_start":5,"column_end":67}},{"value":"/ implications of this are not already clear to you, then *do","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":6974,"byte_end":7037,"line_start":187,"line_end":187,"column_start":5,"column_end":68}},{"value":"/ not* use this method. Also be aware that Rust has stronger","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7042,"byte_end":7104,"line_start":188,"line_end":188,"column_start":5,"column_end":67}},{"value":"/ aliasing rules than other languages, so it may be UB to","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7109,"byte_end":7168,"line_start":189,"line_end":189,"column_start":5,"column_end":64}},{"value":"/ dereference the resulting pointer even if it points to a valid","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7173,"byte_end":7239,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ location, due to the presence of other live references.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7244,"byte_end":7303,"line_start":191,"line_end":191,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7308,"byte_end":7317,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7982,"byte_end":7989,"line_start":209,"line_end":209,"column_start":19,"column_end":26},"name":"unapply","qualname":"<FieldOffset<T, U, PinFlag>>::unapply","value":"pub unsafe fn unapply<'a>(Self, &'a U) -> &'a T","parent":null,"children":[],"decl_id":null,"docs":" Unapply the field offset to a reference.","sig":null,"attributes":[{"value":"/ Unapply the field offset to a reference.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7433,"byte_end":7477,"line_start":196,"line_end":196,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7482,"byte_end":7485,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7490,"byte_end":7502,"line_start":198,"line_end":198,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7507,"byte_end":7510,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ *Warning: very unsafe!*","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7515,"byte_end":7542,"line_start":200,"line_end":200,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7547,"byte_end":7550,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This applies a negative offset to a reference. If the safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7555,"byte_end":7619,"line_start":202,"line_end":202,"column_start":5,"column_end":69}},{"value":"/ implications of this are not already clear to you, then *do","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7624,"byte_end":7687,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/ not* use this method. Also be aware that Rust has stronger","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7692,"byte_end":7754,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/ aliasing rules than other languages, so this method may cause UB","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7759,"byte_end":7827,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ even if the resulting reference points to a valid location, due","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7832,"byte_end":7899,"line_start":206,"line_end":206,"column_start":5,"column_end":72}},{"value":"/ to the presence of other live references.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7904,"byte_end":7949,"line_start":207,"line_end":207,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":7954,"byte_end":7963,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8618,"byte_end":8629,"line_start":225,"line_end":225,"column_start":19,"column_end":30},"name":"unapply_mut","qualname":"<FieldOffset<T, U, PinFlag>>::unapply_mut","value":"pub unsafe fn unapply_mut<'a>(Self, &'a mut U) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Unapply the field offset to a mutable reference.","sig":null,"attributes":[{"value":"/ Unapply the field offset to a mutable reference.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8061,"byte_end":8113,"line_start":212,"line_end":212,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8118,"byte_end":8121,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8126,"byte_end":8138,"line_start":214,"line_end":214,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8143,"byte_end":8146,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ *Warning: very unsafe!*","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8151,"byte_end":8178,"line_start":216,"line_end":216,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8183,"byte_end":8186,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This applies a negative offset to a reference. If the safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8191,"byte_end":8255,"line_start":218,"line_end":218,"column_start":5,"column_end":69}},{"value":"/ implications of this are not already clear to you, then *do","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8260,"byte_end":8323,"line_start":219,"line_end":219,"column_start":5,"column_end":68}},{"value":"/ not* use this method. Also be aware that Rust has stronger","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8328,"byte_end":8390,"line_start":220,"line_end":220,"column_start":5,"column_end":67}},{"value":"/ aliasing rules than other languages, so this method may cause UB","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8395,"byte_end":8463,"line_start":221,"line_end":221,"column_start":5,"column_end":73}},{"value":"/ even if the resulting reference points to a valid location, due","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8468,"byte_end":8535,"line_start":222,"line_end":222,"column_start":5,"column_end":72}},{"value":"/ to the presence of other live references.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8540,"byte_end":8585,"line_start":223,"line_end":223,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8590,"byte_end":8599,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9087,"byte_end":9107,"line_start":237,"line_end":237,"column_start":25,"column_end":45},"name":"as_pinned_projection","qualname":"<FieldOffset<T, U, PinFlag>>::as_pinned_projection","value":"pub const unsafe fn as_pinned_projection(Self) -> FieldOffset<T, U, AllowPin>","parent":null,"children":[],"decl_id":null,"docs":" Convert this offset to an offset that is allowed to go from `Pin<&T>`\n to `Pin<&U>`","sig":null,"attributes":[{"value":"/ Convert this offset to an offset that is allowed to go from `Pin<&T>`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8718,"byte_end":8791,"line_start":229,"line_end":229,"column_start":5,"column_end":78}},{"value":"/ to `Pin<&U>`","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8796,"byte_end":8812,"line_start":230,"line_end":230,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8817,"byte_end":8820,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8825,"byte_end":8837,"line_start":232,"line_end":232,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8842,"byte_end":8845,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The Pin safety rules for projection must be respected. These rules are","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8850,"byte_end":8924,"line_start":234,"line_end":234,"column_start":5,"column_end":79}},{"value":"/ explained in the","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8929,"byte_end":8949,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/ [Pin documentation](https://doc.rust-lang.org/stable/std/pin/index.html#pinning-is-structural-for-field)","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":8954,"byte_end":9062,"line_start":236,"line_end":236,"column_start":5,"column_end":113}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9272,"byte_end":9294,"line_start":242,"line_end":242,"column_start":18,"column_end":40},"name":"as_unpinned_projection","qualname":"<FieldOffset<T, U, PinFlag>>::as_unpinned_projection","value":"pub const fn as_unpinned_projection(Self) -> FieldOffset<T, U, NotPinned>","parent":null,"children":[],"decl_id":null,"docs":" Remove the AllowPin flag\n","sig":null,"attributes":[{"value":"/ Remove the AllowPin flag","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9226,"byte_end":9254,"line_start":241,"line_end":241,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9926,"byte_end":9948,"line_start":257,"line_end":257,"column_start":25,"column_end":47},"name":"new_from_offset_pinned","qualname":"<FieldOffset<T, U, AllowPin>>::new_from_offset_pinned","value":"pub const unsafe fn new_from_offset_pinned(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a field offset directly from a byte offset, which can be projected from\n a pinned.","sig":null,"attributes":[{"value":"/ Construct a field offset directly from a byte offset, which can be projected from","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9461,"byte_end":9546,"line_start":248,"line_end":248,"column_start":5,"column_end":90}},{"value":"/ a pinned.","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9551,"byte_end":9564,"line_start":249,"line_end":249,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9569,"byte_end":9572,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9577,"byte_end":9589,"line_start":251,"line_end":251,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9594,"byte_end":9597,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ In addition to the safety rules of FieldOffset::new_from_offset, the projection","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9602,"byte_end":9685,"line_start":253,"line_end":253,"column_start":5,"column_end":88}},{"value":"/ from `Pin<&T>` to `Pin<&U>` must also be allowed. The rules are explained in the","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9690,"byte_end":9774,"line_start":254,"line_end":254,"column_start":5,"column_end":89}},{"value":"/ [Pin documentation](https://doc.rust-lang.org/stable/std/pin/index.html#pinning-is-structural-for-field)","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9779,"byte_end":9887,"line_start":255,"line_end":255,"column_start":5,"column_end":113}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9892,"byte_end":9901,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10151,"byte_end":10160,"line_start":264,"line_end":264,"column_start":12,"column_end":21},"name":"apply_pin","qualname":"<FieldOffset<T, U, AllowPin>>::apply_pin","value":"pub fn apply_pin<'a>(Self, Pin<&'a T>) -> Pin<&'a U>","parent":null,"children":[],"decl_id":null,"docs":" Apply the field offset to a pinned reference and return a pinned\n reference to the field\n","sig":null,"attributes":[{"value":"/ Apply the field offset to a pinned reference and return a pinned","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10026,"byte_end":10094,"line_start":261,"line_end":261,"column_start":5,"column_end":73}},{"value":"/ reference to the field","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10099,"byte_end":10125,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10130,"byte_end":10139,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10407,"byte_end":10420,"line_start":270,"line_end":270,"column_start":12,"column_end":25},"name":"apply_pin_mut","qualname":"<FieldOffset<T, U, AllowPin>>::apply_pin_mut","value":"pub fn apply_pin_mut<'a>(Self, Pin<&'a mut T>) -> Pin<&'a mut U>","parent":null,"children":[],"decl_id":null,"docs":" Apply the field offset to a pinned mutable reference and return a\n pinned mutable reference to the field\n","sig":null,"attributes":[{"value":"/ Apply the field offset to a pinned mutable reference and return a","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10266,"byte_end":10335,"line_start":267,"line_end":267,"column_start":5,"column_end":74}},{"value":"/ pinned mutable reference to the field","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10340,"byte_end":10381,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10386,"byte_end":10395,"line_start":269,"line_end":269,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2524,"byte_end":2535,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5208,"byte_end":5219,"line_start":135,"line_end":135,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9427,"byte_end":9438,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10590,"byte_end":10601,"line_start":275,"line_end":275,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11033,"byte_end":11044,"line_start":287,"line_end":287,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11280,"byte_end":11291,"line_start":294,"line_end":294,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11557,"byte_end":11568,"line_start":301,"line_end":301,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11814,"byte_end":11825,"line_start":308,"line_end":308,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":12134,"byte_end":12145,"line_start":317,"line_end":317,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":12313,"byte_end":12324,"line_start":323,"line_end":323,"column_start":27,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":12367,"byte_end":12378,"line_start":324,"line_end":324,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":2524,"byte_end":2535,"line_start":71,"line_end":71,"column_start":12,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":5208,"byte_end":5219,"line_start":135,"line_end":135,"column_start":21,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":9427,"byte_end":9438,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":10590,"byte_end":10601,"line_start":275,"line_end":275,"column_start":50,"column_end":61},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2786}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11033,"byte_end":11044,"line_start":287,"line_end":287,"column_start":42,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11280,"byte_end":11291,"line_start":294,"line_end":294,"column_start":52,"column_end":63},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11557,"byte_end":11568,"line_start":301,"line_end":301,"column_start":42,"column_end":53},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":11814,"byte_end":11825,"line_start":308,"line_end":308,"column_start":52,"column_end":63},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2947}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":12134,"byte_end":12145,"line_start":317,"line_end":317,"column_start":33,"column_end":44},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":8962}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":12313,"byte_end":12324,"line_start":323,"line_end":323,"column_start":27,"column_end":38},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2890}},{"span":{"file_name":"/Users/nolanjacobsonpersonal/.cargo/registry/src/github.com-1ecc6299db9ec823/field-offset-0.3.4/src/lib.rs","byte_start":12367,"byte_end":12378,"line_start":324,"line_end":324,"column_start":28,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":20},"to":{"krate":1,"index":2501}}]}